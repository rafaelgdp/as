model Diagrama2

-- Aluno: Rafael Guerra de Pontes
-- Matrícula: 118110377

-- Definição de classes

class Artista
attributes
    nome:String
    biografia:String
operations
    totalVisualizacoes():Integer = self.albuns.totalVisualizacoes()->sum() + self.eps.totalVisualizacoes()->sum() + self.singles.totalVisualizacoes()->sum()
end

class Album
attributes
    nome:String
    tipo:TipoAlbum
operations
    totalVisualizacoes():Integer = self.discos.musicas->asSet().visualizacoes->sum()
end

class Disco
attributes
    numDisco:Integer
operations
    duracaoTotal():Integer = self.musicas.duracao.totalSegundos()->sum()
end

class Musica
attributes
    titulo:String
    duracao:Tempo
    visualizacoes:Integer
operations
    ouvir()
end

class EP
attributes
    nome:String
operations
    totalVisualizacoes():Integer = self.musicas.visualizacoes->sum()
end

class Tempo
attributes
    dias:Integer
    horas:Integer
    minutos:Integer
    segundos:Integer
operations
    totalSegundos():Integer = segundos + (minutos * 60) + (horas * 60 * 60) + (dias * 60 * 60 * 24)
end

class Single
attributes
    nome:String
operations
    duracaoTotal():Tempo
    totalVisualizacoes():Integer = self.musicas.visualizacoes->sum()
end

class Playlist
attributes
    descricao:String
    ehPublica:Boolean
    ehColaborativa:Boolean
operations
    calculaTempo():Integer = self.musicas.duracao.totalSegundos()->sum()
    numeroDeMusica():Integer
end

class Usuario
attributes
    nome:String
    email:String
end

enum TipoAlbum {ESTUDIO, AO_VIVO, SOLO, COVER}

association artistasAlbuns between
    Artista[*] role artistas
    Album[*] role albuns
end

association artistasSingles between
    Artista[*] role artistas
    Single[*] role singles
end

association albunsDiscos between
    Album[1] role album
    Disco[*] role discos
end

association discoMusicas between
    Disco[1] role disco
    Musica[*] role musicas
end

association musicasSingle between
    Musica[1..3] role musicas
    Single[1] role single
end

association artistasEPs between
    Artista[*] role artistas
    EP[*] role eps
end

association EPsMusicas between
    EP[0..1] role ep
    Musica[3..6] role musicas
end

association musicasPlaylists between
    Musica[*] role musicas
    Playlist[*] role playlists
end

association playlistsUsuarios between
    Playlist[*] role playlists
    Usuario[1] role donoPlaylist
end

constraints

context Artista
    inv: self.albuns->isUnique(a:Album | a)

context Album
    inv: self.discos->isUnique(d:Disco | d.numDisco)

context EP
    inv: self.musicas->size() >= 3 and self.musicas->size() <= 6

context Single
    inv: self.musicas->size() >= 1 and self.musicas->size() <= 3

context Album
    inv: self.discos.musicas->asSet()->size() >= 8

context Tempo
    inv: dias >= 0
    inv: horas >= 0
    inv: minutos >= 0
    inv: segundos >= 0
    inv: (dias + horas + minutos + segundos) > 0

context Playlist
    inv: ehPublica implies not ehColaborativa
    inv: ehColaborativa implies not ehPublica

context Musica::ouvir()
    post:
		self.visualizacoes = self.visualizacoes@pre + 1
